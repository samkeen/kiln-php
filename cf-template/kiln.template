{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The Kiln Packer container builder system",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "KilnReleaseVersion": {
      "Description": "The Kiln Release to deploy (https://github.com/samkeen/kiln/releases)",
      "Type": "String",
      "Default": "v0.0.0"
    },
    "packerTemplatesRepo": {
      "Description": "The checkout path for your Packer templates.  ex: 'https://github.com/<USERNAME>/packer-templates.git'",
      "Type": "String",
      "Default": "https://github.com/<USER-NAME>/<REPO-NAME>.git"
    },
    "InstanceType": {
      "Description": "WebServer EC2 instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t1.micro",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "SSHLocation": {
      "Description": "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "t1.micro": {
        "Arch": "PV64"
      },
      "t2.micro": {
        "Arch": "HVM64"
      },
      "t2.small": {
        "Arch": "HVM64"
      },
      "t2.medium": {
        "Arch": "HVM64"
      },
      "m1.small": {
        "Arch": "PV64"
      },
      "m1.medium": {
        "Arch": "PV64"
      },
      "m1.large": {
        "Arch": "PV64"
      },
      "m1.xlarge": {
        "Arch": "PV64"
      },
      "m2.xlarge": {
        "Arch": "PV64"
      },
      "m2.2xlarge": {
        "Arch": "PV64"
      },
      "m2.4xlarge": {
        "Arch": "PV64"
      },
      "m3.medium": {
        "Arch": "HVM64"
      },
      "m3.large": {
        "Arch": "HVM64"
      },
      "m3.xlarge": {
        "Arch": "HVM64"
      },
      "m3.2xlarge": {
        "Arch": "HVM64"
      },
      "c1.medium": {
        "Arch": "PV64"
      },
      "c1.xlarge": {
        "Arch": "PV64"
      },
      "c3.large": {
        "Arch": "HVM64"
      },
      "c3.xlarge": {
        "Arch": "HVM64"
      },
      "c3.2xlarge": {
        "Arch": "HVM64"
      },
      "c3.4xlarge": {
        "Arch": "HVM64"
      },
      "c3.8xlarge": {
        "Arch": "HVM64"
      },
      "c4.large": {
        "Arch": "HVM64"
      },
      "c4.xlarge": {
        "Arch": "HVM64"
      },
      "c4.2xlarge": {
        "Arch": "HVM64"
      },
      "c4.4xlarge": {
        "Arch": "HVM64"
      },
      "c4.8xlarge": {
        "Arch": "HVM64"
      },
      "g2.2xlarge": {
        "Arch": "HVMG2"
      },
      "r3.large": {
        "Arch": "HVM64"
      },
      "r3.xlarge": {
        "Arch": "HVM64"
      },
      "r3.2xlarge": {
        "Arch": "HVM64"
      },
      "r3.4xlarge": {
        "Arch": "HVM64"
      },
      "r3.8xlarge": {
        "Arch": "HVM64"
      },
      "i2.xlarge": {
        "Arch": "HVM64"
      },
      "i2.2xlarge": {
        "Arch": "HVM64"
      },
      "i2.4xlarge": {
        "Arch": "HVM64"
      },
      "i2.8xlarge": {
        "Arch": "HVM64"
      },
      "d2.xlarge": {
        "Arch": "HVM64"
      },
      "d2.2xlarge": {
        "Arch": "HVM64"
      },
      "d2.4xlarge": {
        "Arch": "HVM64"
      },
      "d2.8xlarge": {
        "Arch": "HVM64"
      },
      "hi1.4xlarge": {
        "Arch": "HVM64"
      },
      "hs1.8xlarge": {
        "Arch": "HVM64"
      },
      "cr1.8xlarge": {
        "Arch": "HVM64"
      },
      "cc2.8xlarge": {
        "Arch": "HVM64"
      }
    },
    "AWSRegionArch2AMI": {
      "us-east-1": {
        "PV64": "ami-1ccae774",
        "HVM64": "ami-1ecae776",
        "HVMG2": "ami-8c6b40e4"
      },
      "us-west-2": {
        "PV64": "ami-ff527ecf",
        "HVM64": "ami-e7527ed7",
        "HVMG2": "ami-abbe919b"
      },
      "us-west-1": {
        "PV64": "ami-d514f291",
        "HVM64": "ami-d114f295",
        "HVMG2": "ami-f31ffeb7"
      },
      "eu-west-1": {
        "PV64": "ami-bf0897c8",
        "HVM64": "ami-a10897d6",
        "HVMG2": "ami-d5bc24a2"
      },
      "eu-central-1": {
        "PV64": "ami-ac221fb1",
        "HVM64": "ami-a8221fb5",
        "HVMG2": "ami-7cd2ef61"
      },
      "ap-northeast-1": {
        "PV64": "ami-27f90e27",
        "HVM64": "ami-cbf90ecb",
        "HVMG2": "ami-6318e863"
      },
      "ap-southeast-1": {
        "PV64": "ami-acd9e8fe",
        "HVM64": "ami-68d8e93a",
        "HVMG2": "ami-3807376a"
      },
      "ap-southeast-2": {
        "PV64": "ami-ff9cecc5",
        "HVM64": "ami-fd9cecc7",
        "HVMG2": "ami-89790ab3"
      },
      "sa-east-1": {
        "PV64": "ami-bb2890a6",
        "HVM64": "ami-b52890a8",
        "HVMG2": "NOT_SUPPORTED"
      },
      "cn-north-1": {
        "PV64": "ami-fa39abc3",
        "HVM64": "ami-f239abcb",
        "HVMG2": "NOT_SUPPORTED"
      }
    }
  },
  "Resources": {
    "BuildMachineSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          }
        ],
        "Tags": [
          {
            "Key": "kiln_component",
            "Value": "build_machine_access"
          }
        ]
      }
    },
    "InstanceProfile" : {
      "Type" : "AWS::IAM::InstanceProfile",
      "Properties" : {
        "Path" : "/",
        "Roles" : ["Packer-Ami-Builder-Machine"]
      }
    },
    "BuildMachine": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "SecurityGroups": [
          {
            "Ref": "BuildMachineSecurityGroup"
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "IamInstanceProfile" : {"Ref" : "InstanceProfile"} ,
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",

                "yum update -y\n",
                "yum install -y git php55-cli\n",

                "wget https://dl.bintray.com/mitchellh/packer/packer_0.8.2_linux_amd64.zip\n",
                "unzip packer_0.8.2_linux_amd64.zip -d /opt/packer\n",
                "ln -s /opt/packer/packer /usr/bin/container-packer\n",

                "touch /home/ec2-user/.ssh/known_hosts\n",
                "ssh-keyscan -t rsa,dsa github.com 2>&1 | sort -u - /home/ec2-user/.ssh/known_hosts > /home/ec2-user/.ssh/tmp_hosts\n",
                "cat /home/ec2-user/.ssh/tmp_hosts >> /home/ec2-user/.ssh/known_hosts\n",
                "chown ec2-user:ec2-user /home/ec2-user/.ssh/known_hosts\n",

                "mkdir /home/ec2-user/kiln\n",
                "cd /home/ec2-user/kiln\n",
                "wget https://github.com/samkeen/kiln/releases/download/",
                { "Ref": "KilnReleaseVersion" },
                "/kiln.tar.gz\n",
                "tar -zxf kiln.tar.gz\n",

                "php init-config.php ",
                " --awsRegion ",
                { "Ref" : "AWS::Region" },
                " --templatesRepo ",
                { "Ref" : "packerTemplatesRepo" },
                " --auditTrailBucket ",
                { "Fn::GetAtt": ["AuditTrailBucket", "DomainName"]},
                "\n",

                "chown -R ec2-user:ec2-user /home/ec2-user/kiln\n"

              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Kiln Build Machine"
          }
        ]
      }
    },
    "AuditTrailBucket": {
      "Type": "AWS::S3::Bucket",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccessControl": "Private",
        "BucketName": "kiln-audit-trail",
        "Tags": [
          {
            "Key": "kiln_component",
            "Value": "audit_trail_storage"
          }
        ]
      }
    },
    "BuildRequestQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "DelaySeconds": "0",
        "MaximumMessageSize": "256000",
        "MessageRetentionPeriod": "345600",
        "ReceiveMessageWaitTimeSeconds": "0",
        "VisibilityTimeout": "1800"
      }
    }
  },
  "Outputs": {
    "BuildMachineAccess": {
      "Value": {
        "Fn::GetAtt": [
          "BuildMachine",
          "PublicIp"
        ]
      },
      "Description": "WordPress Website"
    },
    "AuditBucketBucketSecureURL": {
      "Value": {
        "Ref": "AuditTrailBucket"
      },
      "Description": "Name of S3 bucket to hold the audit trail content"
    }
  }
}
