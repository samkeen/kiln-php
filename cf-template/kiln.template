{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The Kiln Packer container builder system",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "KilnReleaseVersion": {
      "Description": "The Kiln Release to deploy (https://github.com/samkeen/kiln/releases)",
      "Type": "String",
      "Default": "v0.0.0"
    },
    "packerTemplatesRepo": {
      "Description": "The checkout path for your Packer templates.  ex: 'https://github.com/<USERNAME>/packer-templates.git'",
      "Type": "String",
      "Default": "https://github.com/<USER-NAME>/<REPO-NAME>.git"
    },
    "InstanceSize": {
      "Description": "Worker EC2 instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t1.micro",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "AmiId": {
      "Description": "The AMI id for the Kiln machine",
      "Type": "String",
      "Default": "ami-XXXXXXXXX"
    },
    "DeployVPC": {
      "Description": "Which VPC to deploy to",
      "Type": "AWS::EC2::VPC::Id"
    },
    "DeploySubnet": {
      "Description": "Which VPC Subnet to deploy to",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "SSHLocation": {
      "Description": "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Resources": {
    "KilnBuildMachineSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": { "Ref": "DeployVPC" },
        "GroupDescription": "Enable SSH access",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          }
        ],
        "Tags": [
          {
            "Key": "kiln_component",
            "Value": "build_machine_access"
          }
        ]
      }
    },
    "KilnBuildMachine": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Ref": "AmiId"
        },
        "InstanceType": {
          "Ref": "InstanceSize"
        },
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet": [{ "Ref" : "KilnBuildMachineSecurityGroup" }],
          "SubnetId": { "Ref" : "DeploySubnet" }
        } ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "IamInstanceProfile" : {"Ref" : "KilnEc2RoleInstanceProfile"} ,
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",

                "yum update -y\n",
                "yum install -y git php55-cli awslogs\n",

                "wget https://dl.bintray.com/mitchellh/packer/packer_0.8.2_linux_amd64.zip\n",
                "unzip packer_0.8.2_linux_amd64.zip -d /opt/packer\n",
                "ln -s /opt/packer/packer /usr/bin/container-packer\n",

                "touch /home/ec2-user/.ssh/known_hosts\n",
                "ssh-keyscan -t rsa,dsa github.com 2>&1 | sort -u - /home/ec2-user/.ssh/known_hosts > /home/ec2-user/.ssh/tmp_hosts\n",
                "cat /home/ec2-user/.ssh/tmp_hosts >> /home/ec2-user/.ssh/known_hosts\n",
                "chown ec2-user:ec2-user /home/ec2-user/.ssh/known_hosts\n",

                "mkdir /home/ec2-user/kiln\n",
                "cd /home/ec2-user/kiln\n",
                "wget https://github.com/samkeen/kiln/releases/download/",
                { "Ref": "KilnReleaseVersion" },
                "/kiln.tar.gz\n",
                "tar -zxf kiln.tar.gz\n",

                "php init-config.php ",
                " --awsRegion ",
                { "Ref" : "AWS::Region" },
                " --templatesRepo ",
                { "Ref" : "packerTemplatesRepo" },
                " --auditTrailBucket ",
                { "Ref": "KilnAuditTrailBucket"},
                " --buildRequestQueue ",
                { "Ref": "KilnBuildRequestQueue"},
                "\n",

                "mv /etc/awslogs/awslogs.conf /etc/awslogs/awslogs.conf.stock\n",
                "mv /etc/awslogs/awscli.conf /etc/awslogs/awscli.conf.stock\n",
                "mkdir -p /var/awslogs/state\n",
                "mv /home/ec2-user/kiln/config/cloudwatchLogs/awscli.conf /etc/awslogs/awscli.conf\n",
                "mv /home/ec2-user/kiln/config/cloudwatchLogs/awslogs.conf /etc/awslogs/awslogs.conf\n",
                "service awslogs start\n",
                "chkconfig awslogs on\n",

                "chown -R ec2-user:ec2-user /home/ec2-user/kiln\n"

              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "kiln_component",
            "Value": "container_build_machine"
          }
        ]
      }
    },
    "KilnAuditTrailBucket": {
      "Type": "AWS::S3::Bucket",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccessControl": "Private",
        "Tags": [
          {
            "Key": "kiln_component",
            "Value": "audit_trail_storage"
          }
        ]
      }
    },
    "KilnBuildRequestQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "DelaySeconds": "0",
        "MaximumMessageSize": "256000",
        "MessageRetentionPeriod": "345600",
        "ReceiveMessageWaitTimeSeconds": "0",
        "VisibilityTimeout": "1800"
      }
    },
    "KilnEc2Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": [ "ec2.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path": "/"
      }
    },
    "KilnEc2RolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "root",
        "PolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Action": [
              "ec2:AttachVolume",
              "ec2:CreateVolume",
              "ec2:DeleteVolume",
              "ec2:CreateKeypair",
              "ec2:DeleteKeypair",
              "ec2:CreateSecurityGroup",
              "ec2:DeleteSecurityGroup",
              "ec2:AuthorizeSecurityGroupIngress",
              "ec2:CreateImage",
              "ec2:RunInstances",
              "ec2:TerminateInstances",
              "ec2:StopInstances",
              "ec2:DescribeVolumes",
              "ec2:DetachVolume",
              "ec2:DescribeInstances",
              "ec2:CreateSnapshot",
              "ec2:DeleteSnapshot",
              "ec2:DescribeSnapshots",
              "ec2:DescribeImages",
              "ec2:RegisterImage",
              "ec2:CreateTags",
              "ec2:ModifyImageAttribute",
              "ec2:DeregisterImage"
            ],
            "Resource": "*"
          },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket"
              ],
              "Resource": [
                {"Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "KilnAuditTrailBucket"}]]}
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [
                {"Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "KilnAuditTrailBucket"},"/*"]]}
              ]
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
                "sqs:CreateQueue"
              ],
              "Effect": "Allow",
              "Resource": [
                {"Fn::GetAtt": ["KilnBuildRequestQueue", "Arn" ]}
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams"
              ],
              "Resource": [
                "arn:aws:logs:*:*:*"
              ]
            } ]
        },
        "Roles": [ {
          "Ref": "KilnEc2Role"
        } ]
      }
    },
    "KilnEc2RoleInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ {
          "Ref": "KilnEc2Role"
        } ]
      }
    }
  },
  "Outputs": {
    "BuildMachine": {
      "Value": {
        "Fn::GetAtt": [
          "KilnBuildMachine",
          "PublicIp"
        ]
      },
      "Description": "The Kiln build machine"
    },
    "AuditBucketBucket": {
      "Value": {
        "Ref": "KilnAuditTrailBucket"
      },
      "Description": "Name of S3 bucket to hold the audit trail content"
    },
    "WorkQueue": {
      "Value": {
        "Fn::GetAtt": ["KilnBuildRequestQueue", "Arn" ]
      },
      "Description": "The work queue used to inject build requests"
    }
  }
}
